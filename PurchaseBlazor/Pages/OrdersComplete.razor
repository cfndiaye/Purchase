@page "/orderscompletes"

@using System.Globalization
@using System.IO
@using PurchaseBlazor.Pages.Components
@inject HttpClient _client
@inject IDialogService DialogService
@inject NavigationManager NavigationManager
@attribute [Authorize]

<VerifyIsAuthenticate />
<h1>Suivi des commandes complètes</h1>
<MudCard>
    <MudCardHeader>
        <CardHeaderAvatar>
            <MudIcon Icon="@Icons.Material.Outlined.List"></MudIcon>
        </CardHeaderAvatar>
        <CardHeaderContent>
            <MudText Typo="Typo.body1">Liste des commandes</MudText>
        </CardHeaderContent>
        <CardHeaderActions>
            <MudIconButton Icon="@Icons.Material.Outlined.Add" OnClick="OpenAddDialog" Color="Color.Inherit" />
            <MudIconButton Icon="@Icons.Material.Outlined.MoreVert" OnClick="OpenImportPage" Color="Color.Inherit" />
        </CardHeaderActions>
    </MudCardHeader>
    @*intégration du composant OrderTable*@
    <OrderTable @ref="@_orderTable" Client="@_client" Message="@_message" Dense="@_dense" Loading="@_loading"
                MarginDense="@_marginDense" Severity="@_severity" SelectedOrder="@_selectedOrder" />
    @*intégration du composant AddOrder*@
    <AddOrder @ref="_addOrder" Client="_client" @bind-OrdersList="_ordersList" MarginDense="_marginDense"
              @bind-Message="_message" @bind-Loading="@_loading" @bind-Severity="@_severity" />

</MudCard>



@code {

    private OrderTable _orderTable;
    private string _message = "";
    private Severity _severity = Severity.Info;
    private List<Order> _ordersList = new List<Order>();
    private MudTable<Order> _mudTable;
    private bool _dense = true;
    private Margin _marginDense = Margin.Dense;
    private Order _selectedOrder;
    private AddOrder _addOrder;
    private bool _loading = false;
    private string _searchTexte = "";
    private Task<List<Order>> _ordersLoading;
    private Task<HttpResponseMessage> _orderLoading;



    protected const string URL = "api/orders/GetOrdersByStatus/PO RELEASED";
    protected const string PAGETOGO = "importorders";


    //goto import page
    private void OpenImportPage()
    {
        NavigationManager.NavigateTo(PAGETOGO);
    }

    //open add dialog
    private void OpenAddDialog()
    {
        _addOrder.Show();
    }

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        try
        {
            _ordersLoading = _client.GetFromJsonAsync<List<Order>>(URL);
            _loading = !_ordersLoading.IsCompleted;
            _ordersList = await _ordersLoading;
            if (_ordersLoading.IsCompleted)
            {
                _loading = false;
                _orderTable.DataLoaded(true, _ordersList);
            }
        }
        catch (Exception ex)
        {
            _message = ex.Message;
            _severity = Severity.Error;
            _loading = false;
        }
    }
    private void CloseAlert()
    {
        _message = "";
    }




}