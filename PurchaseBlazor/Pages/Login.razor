@page "/login"
@inject HttpClient _client
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@attribute [AllowAnonymous]



<h3>Login</h3>
<MudPaper Height="400px" Width="400px" Square="false">
    @if (!string.IsNullOrWhiteSpace(_message))
    {
        <MessageAlert Message="@_message" Severity="@_severity" CloseAlert="CloseAlert" />
    }
    <MudContainer MaxWidth="MaxWidth.Small">
        <EditForm @ref="_loginForm" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <MudCard>
                <MudCardHeader>
                    <MudText>Connexion</MudText>
                </MudCardHeader>
                <MudCardContent>

                    <MudTextField Label="Login" @bind-Value="_loginModel.UserName" Variant="Variant.Outlined"
                                  For="@(() => _loginModel.UserName)" />
                    <MudTextField Label="Mot de passe" @bind-Value="_loginModel.Password" InputType="InputType.Password"
                                  Variant="Variant.Outlined" For="@(() => _loginModel.Password)" />

                </MudCardContent>
                <MudCardActions class="d-flex px-6 justify-space-between py-6">
                    <MudButton OnClick="GotoHomePage" Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Cancel"
                               Color="Color.Warning">
                        Annuler
                    </MudButton>
                    <MudButton OnClick="() => OnValidSubmit(_loginForm.EditContext)" Variant="Variant.Filled"
                               EndIcon="@Icons.Material.Filled.Add" Color="Color.Success">
                        Connexion
                    </MudButton>
                </MudCardActions>
            </MudCard>
        </EditForm>
    </MudContainer>
</MudPaper>

@code {
    private LoginModel _loginModel;
    private EditForm _loginForm;
    private const string _uri = "api/Account/PostLogin";
    private const string _homePage = "home";
    private string _message = "";
    private Severity _severity;

    private void OnValidSubmit(EditContext context)
    {

    }

    private async Task AuthenticateUserAsync(LoginModel login)
    {
        var result = await _client.PostAsJsonAsync(_uri, login);
        if (result.IsSuccessStatusCode)
            NavigationManager.NavigateTo(_homePage);
        else
        {
            _message = "Login ou mot de passe incorrect";
            _severity = Severity.Error;
        }

    }

    private void CloseAlert()
    {
        _message = "";
        _severity = Severity.Normal;
    }

    private void GotoHomePage()
    {
        NavigationManager.NavigateTo(_homePage);
    }

    


}
